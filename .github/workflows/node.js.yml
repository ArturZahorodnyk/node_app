name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x,]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - run: npm ci
    
    - run: npm run build --if-present
    
    - name: Get Time
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        timeZone: 3
        format: 'YYYY-MM-DD-HH-mm'
        
    - name: Zip folder 
      run: zip -r cs-glass_version-${{ steps.time.outputs.time }}.zip public/
      
    - name: Upload binary to S3 bucket
      uses: tpaschalis/s3-sync-action@master
      with:
        args: --acl public-read
      env:
        FILE: cs-glass_version*.zip
        AWS_REGION: 'us-east-1'
        AWS_S3_BUCKET: test-bucket-12311152
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 

  deployment:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
     # Step 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::932755430313:role/code_role_git
          role-session-name: samplerolesession
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
     # Step 2
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name Git_Application \
            --deployment-group-name development_gropup \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
